{"version":3,"sources":["webpack://my-echarts/webpack/bootstrap","webpack://my-echarts/webpack/runtime/compat get default export","webpack://my-echarts/webpack/runtime/define property getters","webpack://my-echarts/webpack/runtime/hasOwnProperty shorthand","webpack://my-echarts/external \"path\"","webpack://my-echarts/external \"url\"","webpack://my-echarts/external \"electron\"","webpack://my-echarts/./src/menu/app_menu_template.js","webpack://my-echarts/./src/menu/edit_menu_template.js","webpack://my-echarts/external \"fs-jetpack\"","webpack://my-echarts/./src/main.js","webpack://my-echarts/./src/helpers/window.js","webpack://my-echarts/webpack/startup"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","require","label","submenu","accelerator","click","app","selector","type","menus","appMenuTemplate","editMenuTemplate","Menu","setApplicationMenu","ipcMain","event","arg","reply","href","shell","mainWindow","name","options","userDataDir","jetpack","stateStoreFile","defaultSize","width","height","win","state","windowState","restoredState","read","err","assign","restore","screen","some","display","bounds","x","y","windowWithinBounds","resetToDefaults","BrowserWindow","on","isMinimized","isMaximized","position","getPosition","size","getSize","getCurrentPosition","write","atomic","createWindow","webPreferences","nodeIntegration","contextIsolation","enableRemoteModule","env","loadURL","url","pathname","path","__dirname","protocol","slashes","__webpack_modules__"],"mappings":"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","file":"main.js","sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"path\");;","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"url\");;","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"electron\");;","import { app } from \"electron\";\n\nexport default {\n  label: \"App\",\n  submenu: [\n    {\n      label: \"Quit\",\n      accelerator: \"CmdOrCtrl+Q\",\n      click: () => {\n        app.quit();\n      }\n    }\n  ]\n};\n","export default {\n  label: \"Edit\",\n  submenu: [\n    { label: \"Undo\", accelerator: \"CmdOrCtrl+Z\", selector: \"undo:\" },\n    { label: \"Redo\", accelerator: \"Shift+CmdOrCtrl+Z\", selector: \"redo:\" },\n    { type: \"separator\" },\n    { label: \"Cut\", accelerator: \"CmdOrCtrl+X\", selector: \"cut:\" },\n    { label: \"Copy\", accelerator: \"CmdOrCtrl+C\", selector: \"copy:\" },\n    { label: \"Paste\", accelerator: \"CmdOrCtrl+V\", selector: \"paste:\" },\n    { label: \"Select All\", accelerator: \"CmdOrCtrl+A\", selector: \"selectAll:\" }\n  ]\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"fs-jetpack\");;","// This is main process of Electron, started as first thing when your\n// app starts. It runs through entire life of your application.\n// It doesn't have any windows which you can see on screen, but we can open\n// window from here.\n\nimport path from \"path\";\nimport url from \"url\";\nimport { app, Menu, ipcMain, shell } from \"electron\";\nimport appMenuTemplate from \"./menu/app_menu_template\";\nimport editMenuTemplate from \"./menu/edit_menu_template\";\nimport devMenuTemplate from \"./menu/dev_menu_template\";\nimport createWindow from \"./helpers/window\";\n\n// Special module holding environment variables which you declared\n// in config/env_xxx.json file.\nimport env from \"env\";\n\n// Save userData in separate folders for each environment.\n// Thanks to this you can use production and development versions of the app\n// on same machine like those are two separate apps.\nif (env.name !== \"production\") {\n  const userDataPath = app.getPath(\"userData\");\n  app.setPath(\"userData\", `${userDataPath} (${env.name})`);\n}\n\nconst setApplicationMenu = () => {\n  const menus = [appMenuTemplate, editMenuTemplate];\n  if (env.name !== \"production\") {\n    menus.push(devMenuTemplate);\n  }\n  Menu.setApplicationMenu(Menu.buildFromTemplate(menus));\n};\n\n// We can communicate with our window (the renderer process) via messages.\nconst initIpc = () => {\n  ipcMain.on(\"need-app-path\", (event, arg) => {\n    event.reply(\"app-path\", app.getAppPath());\n  });\n  ipcMain.on(\"open-external-link\", (event, href) => {\n    shell.openExternal(href);\n  });\n};\n\napp.on(\"ready\", () => {\n  setApplicationMenu();\n  initIpc();\n\n  const mainWindow = createWindow(\"main\", {\n    width: 1000,\n    height: 600,\n    webPreferences: {\n      // Two properties below are here for demo purposes, and are\n      // security hazard. Make sure you know what you're doing\n      // in your production app.\n      nodeIntegration: true,\n      contextIsolation: false,\n      // Spectron needs access to remote module\n      enableRemoteModule: env.name === \"test\"\n    }\n  });\n\n  mainWindow.loadURL(\n    url.format({\n      pathname: path.join(__dirname, \"dist\", \"index.html\"),\n      protocol: \"file:\",\n      slashes: true\n    })\n  );\n\n  if (env.name === \"development\") {\n    mainWindow.openDevTools();\n  }\n});\n\napp.on(\"window-all-closed\", () => {\n  app.quit();\n});\n","// This helper remembers the size and position of your windows, and restores\n// them in that place after app relaunch.\n// Can be used for more than one window, just construct many\n// instances of it and give each different name.\n\nimport { app, BrowserWindow, screen } from \"electron\";\nimport jetpack from \"fs-jetpack\";\n\nexport default (name, options) => {\n  const userDataDir = jetpack.cwd(app.getPath(\"userData\"));\n  const stateStoreFile = `window-state-${name}.json`;\n  const defaultSize = {\n    width: options.width,\n    height: options.height\n  };\n  let state = {};\n  let win;\n\n  const restore = () => {\n    let restoredState = {};\n    try {\n      restoredState = userDataDir.read(stateStoreFile, \"json\");\n    } catch (err) {\n      // For some reason json can't be read (might be corrupted).\n      // No worries, we have defaults.\n    }\n    return Object.assign({}, defaultSize, restoredState);\n  };\n\n  const getCurrentPosition = () => {\n    const position = win.getPosition();\n    const size = win.getSize();\n    return {\n      x: position[0],\n      y: position[1],\n      width: size[0],\n      height: size[1]\n    };\n  };\n\n  const windowWithinBounds = (windowState, bounds) => {\n    return (\n      windowState.x >= bounds.x &&\n      windowState.y >= bounds.y &&\n      windowState.x + windowState.width <= bounds.x + bounds.width &&\n      windowState.y + windowState.height <= bounds.y + bounds.height\n    );\n  };\n\n  const resetToDefaults = () => {\n    const bounds = screen.getPrimaryDisplay().bounds;\n    return Object.assign({}, defaultSize, {\n      x: (bounds.width - defaultSize.width) / 2,\n      y: (bounds.height - defaultSize.height) / 2\n    });\n  };\n\n  const ensureVisibleOnSomeDisplay = windowState => {\n    const visible = screen.getAllDisplays().some(display => {\n      return windowWithinBounds(windowState, display.bounds);\n    });\n    if (!visible) {\n      // Window is partially or fully not visible now.\n      // Reset it to safe defaults.\n      return resetToDefaults();\n    }\n    return windowState;\n  };\n\n  const saveState = () => {\n    if (!win.isMinimized() && !win.isMaximized()) {\n      Object.assign(state, getCurrentPosition());\n    }\n    userDataDir.write(stateStoreFile, state, { atomic: true });\n  };\n\n  state = ensureVisibleOnSomeDisplay(restore());\n\n  win = new BrowserWindow(Object.assign({}, options, state));\n\n  win.on(\"close\", saveState);\n\n  return win;\n};\n","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[281](0, __webpack_exports__, __webpack_require__);\n"],"sourceRoot":""}